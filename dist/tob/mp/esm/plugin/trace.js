var t,e,s;!function(t){t.Mp="mp",t.Quick="quick",t.QG="qg"}(t||(t={})),function(t){t.Launch="launch",t.Terminate="terminate",t.Auto="auto",t.Event="event",t.LogData="log_data",t.Profile="profile"}(e||(e={})),function(t){t.Net="net",t.FailNet="f_net",t.FailData="f_data"}(s||(s={}));class i{constructor(){this.maxCount=100,this.platform=t.Mp}apply(t,i){this.sdk=t,this.options=i,this.aid=this.sdk.appId,this.isAuto=this.options.auto_report,this.isPrivate=!!this.options.channel_domain;const{types:a}=this.sdk;this.sdk.on(a.SubmitBefore,(t=>{if(this.isPrivate)return;if(this.isTest())return;this.parse(t).forEach((t=>{this.collect(t)}))})),this.sdk.on(a.SubmitAfter,(t=>{if(this.isPrivate)return;if(this.isTest())return;const{isError:i,event:a}=t,n=i?s.FailNet:s.FailData,r=this.parse([{events:a}],n);if(n===s.FailData){const{response:s}=t,{data:i}=s;this.collect({key:e.Event,state:n},i.sc||r.length)}else r.forEach((t=>{this.collect(t)}))})),this.sdk.on(a.AppClose,(()=>{this.commit()}))}parse(t,e=s.Net){const i=[];return t&&t.forEach((t=>{const{events:s}=t;s.forEach((t=>{const{event:s}=t;if("applog_trace"===s)return;if(this.isTest(t))return;i.push({key:this.getKey(s),state:e})}))})),i}collect(t,e=1){const{key:s,state:i}=t;this.cache||(this.cache=new Map);const{cache:a}=this,n=(t=1)=>({count:t,state:i,key:s,params_for_special:"applog_trace",platform:this.platform,aid:this.aid,_staging_flag:1});let r=e;if(a.has(s)){const t=a.get(s);if(t.has(i)){const s=t.get(i);s.count+=e,r=s.count}else t.set(i,n(e))}else{const t=new Map;t.set(i,n(e)),a.set(s,t)}r>=this.maxCount&&this.critical(s,i)}report(t){if(!this.aid||!t)return;const e=[];t.forEach((t=>{t.forEach((t=>{t.aid||(t.aid=this.aid);const s=this.sdk.createEvent({event:"applog_trace",params:t});e.push(s)}))})),e.length>0&&this.sdk.event(e)}getKey(t){const{EventType:s,ProfileType:i}=this.sdk;switch(t){case s.appOnShow:return e.Launch;case s.appOnHide:return e.Terminate;default:if(Object.values(s).includes(t))return e.Auto;if(i.includes(t))return e.Profile;return e.Event}}critical(t,e){this.commit()}commit(){if(this.isPrivate)return;if(this.isTest())return;const t=this.cache;this.cache=null,this.report(t)}isTest(t){var e,s;if(t)return!!(null===(e=JSON.parse(t.params))||void 0===e?void 0:e._staging_flag);return!!(null===(s=this.sdk.env.get("evtParams"))||void 0===s?void 0:s._staging_flag)}}i.pluginName="official:trace";export{i as default};
